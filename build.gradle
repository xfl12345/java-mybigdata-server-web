import java.nio.charset.StandardCharsets

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven {
            url 'https://jitpack.io'
        }
        maven {
            url 'https://maven.aliyun.com/repository/central'
        }
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        maven {
            url 'https://maven.aliyun.com/repository/spring'
        }
        maven {
            url 'https://maven.aliyun.com/repository/spring-plugin'
        }
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'org.springframework.boot' version '2.7.3'
    id 'maven-publish'
    id 'java-library'
    id 'java'
    id 'war'
}

group = 'cc.xfl12345.mybigdata'
version = '0.0.1'
sourceCompatibility = '17'
if ((new File("config.gradle")).exists()) {
    apply from: 'config.gradle'
}

eclipse {
    classpath {
        downloadSources = true
        downloadJavadoc = true
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

java {
    compileJava.options.compilerArgs  << '-Xlint:unchecked'
    compileJava.options.encoding = 'UTF-8'
    withSourcesJar()
    // withJavadocJar()
}

javadoc {
    options.encoding = 'UTF-8'
}

publishing {
    publications {
        maven(MavenPublication) {
            // from components.java
            artifact sourcesJar
            artifact bootJar
            artifact bootWar
            artifact war
        }
    }
}



repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url 'https://maven.aliyun.com/repository/central'
    }
    maven {
        url 'https://maven.aliyun.com/repository/public'
    }
    maven {
        url 'https://maven.aliyun.com/repository/spring'
    }
    maven {
        url 'https://maven.aliyun.com/repository/spring-plugin'
    }
}


dependencies {
    // 补全环境，使得 Intelij IDEA 可以调试 build.gradle
    // https://search.maven.org/artifact/org.apache.groovy/groovy-all/4.0.4/pom
    testRuntimeOnly 'org.apache.groovy:groovy:4.0.4'

    File localDevModeConfFile = new File("localDevMode");
    boolean isLocalDevMode = false;
    if (localDevModeConfFile.exists()) {
        FileReader fileReader = new FileReader(localDevModeConfFile, StandardCharsets.UTF_8);
        BufferedReader bufferedReader = new BufferedReader(fileReader);
        try {
            String localDevMode = bufferedReader.readLine();
            isLocalDevMode = "true".equals(localDevMode);
        } catch (Exception ignored) {
        } finally {
            bufferedReader.close();
            fileReader.close();
        }
    }

    def applyPlatform2All = (myDependencyParent) -> {
        api platform(myDependencyParent)
        providedRuntime platform(myDependencyParent)
        annotationProcessor platform(myDependencyParent)
        runtimeOnly platform(myDependencyParent)
        runtimeClasspath platform(myDependencyParent)
        testAnnotationProcessor platform(myDependencyParent)
        testImplementation platform(myDependencyParent)
        testRuntimeOnly platform(myDependencyParent)
        testRuntimeClasspath platform(myDependencyParent)
    }

    String depsParentVersion = '0.0.1'
    if (isLocalDevMode) {
        applyPlatform2All(group: 'cc.xfl12345.mybigdata', name: 'server-deps-parent', version: depsParentVersion)

        api group: 'cc.xfl12345.mybigdata', name: 'server-mysql-spring-boot-starter'
        // api group: 'cc.xfl12345.mybigdata', name: 'server-mysql-spring-boot-starter', version: depsParentVersion, ext: 'pom'
    } else {
        depsParentVersion = 'ad2e00850d'
        applyPlatform2All(group: 'com.github.xfl12345', name: 'java-mybigdata-server-deps-parent', version: depsParentVersion)

        def parentModuleVersion = '29200efe5e'
        // https://jitpack.io/#xfl12345/java-mybigdata-server-mysql-spring-boot-starter
        implementation group: 'com.github.xfl12345', name: 'java-mybigdata-server-mysql-spring-boot-starter', version: parentModuleVersion
        // implementation group: 'com.github.xfl12345', name: 'java-mybigdata-server-mysql-spring-boot-starter', version: parentModuleVersion, ext: 'pom'
    }

    def springBootDependencies = [
        // 'gradle-plugin',
        //'starter-thymeleaf',
        'starter-web',
        'starter-aop',
        'starter-data-jdbc',
        //'devtools',
        'configuration-processor'
    ]

    springBootDependencies.each {
        moduleName ->
            {
                implementation group: 'org.springframework.boot', name: 'spring-boot-' + moduleName
                // implementation group: 'org.springframework.boot', name: 'spring-boot-' + moduleName, ext: 'pom'
            }
    }

    testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test') {
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }
    providedRuntime(group: 'org.springframework.boot', name: 'spring-boot-starter-test') {
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }

    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'

    def saTokenVersion = '1.30.0'
    def hutoolVersion = '5.8.6'
    def apacheCommonsVFS2Version = '2.9.0'

    // Sa-Token 框架
    // https://mvnrepository.com/artifact/cn.dev33/sa-token-spring-boot-starter
    implementation group: 'cn.dev33', name: 'sa-token-spring-boot-starter', version: saTokenVersion
    implementation group: 'cn.dev33', name: 'sa-token-oauth2', version: saTokenVersion

    // SpringDoc 框架
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.11'

    // WebDAV 支持
//    // https://mvnrepository.com/artifact/com.seanox/seanox-spring-webdav
//    implementation( group: 'com.seanox', name: 'seanox-spring-webdav', version: '1.1.1') {
//        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
//    }

//    // https://mvnrepository.com/artifact/com.github.a-langer/webdav-vfs-gate
//    implementation (group: 'com.github.a-langer', name: 'webdav-vfs-gate', version: '1.0.0', classifier: 'classes') {
//        exclude group: 'ch.qos.logback'
//    }


    String org_apache_poi_version = '5.2.2'
    String tomcatVersion = '9.0.65'
    String jackrabbitVersion = '2.21.11'
    Object uni_dependencies = [
        // poi
        'org.apache.poi' : [
            "$org_apache_poi_version": [
                'poi',
                'poi-ooxml-full'
            ]
        ],
        // JSP support
        'org.apache.tomcat': [
            "$tomcatVersion": [
                'tomcat-jsp-api',
                'tomcat-jasper',
                'tomcat-servlet-api'
            ]
        ],
        'org.apache.jackrabbit': [
            "$jackrabbitVersion": [
                'jackrabbit-core',
                'jackrabbit-webdav'
            ]
        ]
    ]

    uni_dependencies.each {
        groupId, groupEntry ->
            {
                groupEntry.each {
                    version, versionEntry ->
                        {
                            versionEntry.each {
                                moduleName -> implementation(group: groupId, name: moduleName, version: version)
                            }
                        }
                }
            }
    }

    // 注解神器 getter setter toString builder
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    implementation group: 'org.projectlombok', name: 'lombok'
    annotationProcessor group: 'org.projectlombok', name: 'lombok'
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok'
    testImplementation group: 'org.projectlombok', name: 'lombok'


    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20220320'

    // JSON Schema support
    // https://mvnrepository.com/artifact/com.github.victools/jsonschema-generator
    implementation group: 'com.github.victools', name: 'jsonschema-generator', version: '4.26.0'

    // https://github.com/jimblackler/jsonschemafriend
    // https://jitpack.io/#net.jimblackler/jsonschemafriend
//    implementation 'net.jimblackler.jsonschemafriend:core:0.11.3'

    // https://mvnrepository.com/artifact/com.networknt/json-schema-validator
    implementation group: 'com.networknt', name: 'json-schema-validator', version: '1.0.72'


    // Ant support
    // https://mvnrepository.com/artifact/org.apache.ant/ant
    implementation group: 'org.apache.ant', name: 'ant', version: '1.10.12'

    // Apache commons
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-configuration2
    implementation group: 'org.apache.commons', name: 'commons-configuration2', version: '2.8.0'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-pool2
    implementation group: 'org.apache.commons', name: 'commons-pool2', version: '2.11.1'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-crypto
    implementation group: 'org.apache.commons', name: 'commons-crypto', version: '1.1.0'

    // https://mvnrepository.com/artifact/org.apache.xmlbeans/xmlbeans
    implementation group: 'org.apache.xmlbeans', name: 'xmlbeans', version: '5.1.0'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-vfs2
    implementation group: 'org.apache.commons', name: 'commons-vfs2', version: apacheCommonsVFS2Version

    // https://mvnrepository.com/artifact/org.apache.commons/commons-vfs2-jackrabbit1
    implementation group: 'org.apache.commons', name: 'commons-vfs2-jackrabbit1', version: apacheCommonsVFS2Version
    // implementation group: 'org.apache.commons', name: 'commons-vfs2-jackrabbit1', version: apacheCommonsVFS2Version, ext: 'pom'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-vfs2-jackrabbit2
    implementation group: 'org.apache.commons', name: 'commons-vfs2-jackrabbit2', version: apacheCommonsVFS2Version

    // https://mvnrepository.com/artifact/commons-net/commons-net
    implementation group: 'commons-net', name: 'commons-net', version: '3.8.0'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpmime
    implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.13'

    // https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload
    implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'

    // // https://mvnrepository.com/artifact/commons-httpclient/commons-httpclient
    // implementation group: 'commons-httpclient', name: 'commons-httpclient', version: '3.1'

//    // https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils
//    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'

    // https://mvnrepository.com/artifact/org.apache.tika/tika-core
    implementation group: 'org.apache.tika', name: 'tika-core', version: '2.4.1'

    // SSH support (For apache VFS sftp)
    // https://search.maven.org/artifact/com.jcraft/jsch/0.1.55/jar
    implementation 'com.jcraft:jsch:0.1.55'


    // XML support
    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.15.3'

//    // https://mvnrepository.com/artifact/org.dom4j/dom4j
//    implementation group: 'org.dom4j', name: 'dom4j', version: '2.1.3'

//    // https://mvnrepository.com/artifact/com.j2html/j2html
//    implementation group: 'com.j2html', name: 'j2html', version: '1.4.0'


//    def javaMailVersion = '1.6.2'
//    // Java Email support
//    // https://mvnrepository.com/artifact/com.sun.mail/javax.mail
//    implementation group: 'com.sun.mail', name: 'javax.mail', version: javaMailVersion
//
//    // https://mvnrepository.com/artifact/javax.mail/javax.mail-api
//    implementation group: 'javax.mail', name: 'javax.mail-api', version: javaMailVersion

//    // 大名鼎鼎的 Java字节码操作框架 ASM
//    // https://mvnrepository.com/artifact/org.ow2.asm/asm
//    implementation group: 'org.ow2.asm', name: 'asm', version: asmVersion
//
//    // https://mvnrepository.com/artifact/org.ow2.asm/asm-commons
//    implementation group: 'org.ow2.asm', name: 'asm-commons', version: asmVersion
//
//    // https://mvnrepository.com/artifact/org.ow2.asm/asm-util
//    implementation group: 'org.ow2.asm', name: 'asm-util', version: asmVersion

//    // 大名鼎鼎的 Java字节码工具 javassist
//    // https://mvnrepository.com/artifact/org.javassist/javassist
//    implementation group: 'org.javassist', name: 'javassist', version: '3.28.0-GA'

//    // https://mvnrepository.com/artifact/net.bytebuddy/byte-buddy
//    implementation group: 'net.bytebuddy', name: 'byte-buddy', version: '1.12.10'
//
//    // https://mvnrepository.com/artifact/org.jsonschema2pojo/jsonschema2pojo
//    implementation group: 'org.jsonschema2pojo', name: 'jsonschema2pojo-core', version: '1.1.2'


    // Google Open Source Library
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'


    // ECC 加解密
    // https://mvnrepository.com/artifact/org.bouncycastle/bcpkix-jdk15to18
    implementation group: 'org.bouncycastle', name: 'bcpkix-jdk15to18', version: '1.71'

    // HuTool 超级工具集
    // https://mvnrepository.com/artifact/cn.hutool/hutool-core
    implementation group: 'cn.hutool', name: 'hutool-core', version: hutoolVersion


//    implementation fileTree(dir:'lib',includes:['**/*.*'])
//    implementation fileTree(dir:'src/main/webapp',includes:['**/*.*'])

}

tasks.named('test') {
    useJUnitPlatform()
}
